version: '3.9'

services:
  db:
    image: postgres:13.10-alpine
    container_name: cp_db
    restart: unless-stopped
    volumes:
      - postgresql_cp_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - 8090:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  backend:
    image: ${DOCKER_USERNAME}/current-paychecks:latest
    build:
      context: ../backend
      dockerfile: Dockerfile
      args:
        SECRET_KEY: ${SECRET_KEY}
        DATABASE_URL: ${DATABASE_URL}
    ports:
     - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env

volumes:
  postgresql_cp_volume:
  pgadmin_data:
